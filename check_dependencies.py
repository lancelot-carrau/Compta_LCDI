#!/usr/bin/env python3
"""
Script pour v√©rifier que toutes les d√©pendances requises sont install√©es
"""

import sys
import importlib
import pkg_resources

# Liste des d√©pendances requises
REQUIRED_PACKAGES = [
    'flask',
    'pandas', 
    'werkzeug',
    'openpyxl',
    'chardet',
    'requests'  # Ajout√© pour les tests
]

# Modules built-in Python qui ne n√©cessitent pas d'installation
BUILTIN_MODULES = [
    'os',
    'datetime', 
    'tempfile',
    'io',
    're',
    'webbrowser',
    'threading',
    'time',
    'sys'
]

def check_package(package_name):
    """V√©rifie si un package est install√© et retourne sa version"""
    try:
        module = importlib.import_module(package_name)
        try:
            version = pkg_resources.get_distribution(package_name).version
            return True, version
        except:
            # Pour les modules qui n'ont pas de version via pkg_resources
            return True, "Version inconnue"
    except ImportError:
        return False, None

def main():
    print("üîç V√©rification des d√©pendances Python...")
    print("=" * 50)
    
    all_ok = True
    
    print("\nüì¶ Packages requis:")
    for package in REQUIRED_PACKAGES:
        is_installed, version = check_package(package)
        if is_installed:
            print(f"‚úÖ {package:<12} - v{version}")
        else:
            print(f"‚ùå {package:<12} - NON INSTALL√â")
            all_ok = False
    
    print("\nüêç Modules Python built-in:")
    for module in BUILTIN_MODULES:
        is_available, _ = check_package(module)
        if is_available:
            print(f"‚úÖ {module}")
        else:
            print(f"‚ùå {module} - NON DISPONIBLE")
            all_ok = False
    
    print("\n" + "=" * 50)
    if all_ok:
        print("‚úÖ Toutes les d√©pendances sont install√©es !")
    else:
        print("‚ùå Certaines d√©pendances manquent.")
        print("Ex√©cutez: pip install -r requirements.txt")
    
    print(f"\nüêç Version Python: {sys.version}")
    return all_ok

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
